#include <stdio.h>
#include <stdlib.h>
#include <pthread.h>
pthread_mutex_t T1, T2;

void *thread1(void *d)
{
   pthread_mutex_lock(&T1); //lock 1
   pthread_mutex_lock(&T2); //lock2
   printf("thread 1");
   pthread_mutex_unlock(&T2); //unlock2
   pthread_mutex_unlock(&T1); //unlock1

}
void *thread2(void *d)
{
   pthread_mutex_lock(&T2);//lock2
   pthread_mutex_lock(&T1);//lock1
   printf("thread 2 ");
   pthread_mutex_unlock(&T1);//unlock1
   pthread_mutex_unlock(&T2);//unlock2
}
int main(int argc, char* argv[])
{
   pthread_t c1,c2;
   pthread_mutex_init(&T1,0);
   pthread_mutex_init(&T2,0);
   pthread_create(&c1,NULL,thread1,0);
   pthread_create(&c2,NULL,thread2,0);
   pthread_join(c1,(void**)0);
   pthread_join(c2,(void**)0);
   pthread_mutex_destroy(&T1);
   pthread_mutex_destroy(&T2);
   return 0;
}
